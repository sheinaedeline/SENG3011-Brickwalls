{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\GitHub\\\\SENG3011-Brickwalls\\\\PHASE_2\\\\Application_SourceCode\\\\travel-restrictions-app\\\\src\\\\components\\\\Flight.js\";\nimport React from 'react';\nimport \"../styles/flight.css\";\nimport { ReactComponent as Plane } from \"@svgr/webpack?-svgo,+titleProp,+ref!../static/svg/plane.svg\";\nimport { ReactComponent as Line } from \"@svgr/webpack?-svgo,+titleProp,+ref!../static/svg/remove.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Flight({\n  airline,\n  depDate,\n  arrDate,\n  time,\n  stops,\n  origin,\n  destination,\n  price\n}) {\n  let depart = new Date(depDate);\n  let departHour = depart.getHours() + Math.floor(Math.random() * 24 + 1);\n  let departTime = departHour * 100;\n\n  if (departTime > 1200) {\n    departTime = departTime.toString().substring(0, departTime.toString().length - 2) + \":00\" + \"pm\";\n  } else {\n    departTime = departTime.toString().substring(0, departTime.toString().length - 2) + \":00\" + \"am\";\n  }\n\n  let arriveTime = (departHour + time) * 100;\n\n  if (arriveTime > 2400) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    arrDate = depart.getDate() + 1 + \" \" + monthNames[depart.getMonth()] + \" \" + depart.getFullYear();\n    arriveTime -= 2400;\n  } else {\n    arrDate = depDate;\n  }\n\n  if (arriveTime > 1200) {\n    arriveTime = arriveTime.toString().substring(0, arriveTime.toString().length - 2) + \":00\" + \"pm\";\n  } else {\n    arriveTime = arriveTime.toString().substring(0, arriveTime.toString().length - 2) + \":00\" + \"am\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"airline-header\",\n            children: airline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Departure: \", departTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Arrival: \", arriveTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: depDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: arrDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [time, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [stops, \" stops\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flight-node\",\n              children: origin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: /*#__PURE__*/_jsxDEV(Plane, {\n              className: \"plane-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flight-node\",\n              children: destination\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price\",\n              children: [\"$\", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Flight;\nexport default Flight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flight\");","map":{"version":3,"sources":["C:/Users/user/GitHub/SENG3011-Brickwalls/PHASE_2/Application_SourceCode/travel-restrictions-app/src/components/Flight.js"],"names":["React","Flight","airline","depDate","arrDate","time","stops","origin","destination","price","depart","Date","departHour","getHours","Math","floor","random","departTime","toString","substring","length","arriveTime","monthNames","getDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"../styles/flight.css\"\r\nimport { ReactComponent as Plane } from \"../static/svg/plane.svg\"\r\nimport { ReactComponent as Line } from \"../static/svg/remove.svg\"\r\n\r\nfunction Flight({airline, depDate, arrDate, time, stops, origin, destination, price}) {\r\n    let depart = new Date(depDate)\r\n    let departHour = (depart.getHours() + Math.floor(Math.random() * 24 + 1))\r\n    let departTime = departHour * 100\r\n    if (departTime > 1200) {\r\n        departTime = departTime.toString().substring(0, departTime.toString().length - 2) + \":00\" + \"pm\"\r\n    }\r\n    else {\r\n        departTime = departTime.toString().substring(0, departTime.toString().length - 2) + \":00\" + \"am\"\r\n    }\r\n    let arriveTime = (departHour + time) * 100\r\n    if (arriveTime > 2400) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        arrDate = depart.getDate() + 1 + \" \" + monthNames[depart.getMonth()] + \" \" + depart.getFullYear()\r\n        arriveTime -= 2400\r\n    }\r\n    else {\r\n        arrDate = depDate\r\n    }\r\n    if (arriveTime > 1200) {\r\n        arriveTime = arriveTime.toString().substring(0, arriveTime.toString().length - 2) + \":00\" + \"pm\"\r\n    }\r\n    else {\r\n        arriveTime = arriveTime.toString().substring(0, arriveTime.toString().length - 2) + \":00\" + \"am\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"flight-container\" >\r\n            <div className=\"flight-body\">\r\n                <div className=\"flight-info\">\r\n                    <div className=\"flight-details\">\r\n                        <div className=\"airline-header\">{airline}</div>\r\n                        <div className=\"left-container\">\r\n                            <div>Departure: {departTime}</div>\r\n                            <div>Arrival: {arriveTime}</div>\r\n                            <div>{depDate}</div>\r\n                            <div>{arrDate}</div>\r\n                            <div>{time} hours</div>\r\n                            <div>{stops} stops</div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"right-container\">\r\n                        <div className=\"grid-container\">\r\n                            <div className=\"flight-node\">{origin}</div>\r\n                        </div>\r\n                        <div className=\"grid-container\">\r\n                            <Line className=\"line\"></Line>\r\n                        </div>\r\n                        <div className=\"grid-container\">\r\n                            <Plane className=\"plane-icon\"></Plane>\r\n                        </div>\r\n                        <div className=\"grid-container\">\r\n                            <Line className=\"line\"></Line>\r\n                        </div>\r\n                        <div className=\"grid-container\">\r\n                            <div className=\"flight-node\">{destination}</div>\r\n                        </div>\r\n                        <div className=\"grid-container\">\r\n                            <div className=\"price\">${price}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flight;"]},"metadata":{},"sourceType":"module"}