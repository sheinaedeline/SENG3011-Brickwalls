{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\GitHub\\\\SENG3011-Brickwalls\\\\PHASE_2\\\\Application_SourceCode\\\\travel-restrictions-app\\\\src\\\\components\\\\FlightsModal.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/modal.css';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport Flight from './Flight.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FlightsModal({\n  show,\n  setShow,\n  destination,\n  origin,\n  depDate,\n  retDate\n}) {\n  _s();\n\n  const destCity = destination.split(\", \");\n  const origCity = origin.split(\", \");\n  destination = destCity[0];\n  origin = origCity[0];\n\n  const flightsData = require(\"../data/flightsdata.json\");\n\n  const [curr1, setCurr1] = useState(\"selected-left\");\n  const [curr2, setCurr2] = useState(\"unselected-right\");\n  const [cities, setCities] = useState([destination, origin]);\n  useEffect(() => {\n    setCities([destination, origin]);\n  }, [destination, origin]);\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const depart = depDate.getDate() + \" \" + monthNames[depDate.getMonth()] + \" \" + depDate.getFullYear();\n  const returnDate = retDate.getDate() + \" \" + monthNames[retDate.getMonth()] + \" \" + retDate.getFullYear();\n  let count = 0;\n\n  const checkCities = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-list\",\n      children: flightsData.map(e => {\n        if (e.destination === cities[0] && e.origin === cities[1]) {\n          if (curr1 === \"selected-left\") {\n            count += 1;\n            return /*#__PURE__*/_jsxDEV(Flight, {\n              airline: e.airline,\n              depDate: depart,\n              arrDate: e.arrDate,\n              time: e.time,\n              stops: e.stops,\n              origin: e.origin,\n              destination: e.destination,\n              price: e.price\n            }, count, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this);\n          } else {\n            count += 1;\n            return /*#__PURE__*/_jsxDEV(Flight, {\n              airline: e.airline,\n              depDate: returnDate,\n              arrDate: e.arrDate,\n              time: e.time,\n              stops: e.stops,\n              origin: e.origin,\n              destination: e.destination,\n              price: e.price\n            }, count, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this);\n          }\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  };\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => setShow(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Flights from \", origin, \" to \", destination]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: curr1,\n            onClick: () => {\n              setCurr2(\"unselected-right\");\n              setCurr1(\"selected-left\");\n              setCities(cities.reverse());\n            },\n            children: depart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: curr2,\n            onClick: () => {\n              setCurr2(\"selected-right\");\n              setCurr1(\"unselected-left\");\n              setCities(cities.reverse());\n            },\n            children: returnDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: checkCities()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\n_s(FlightsModal, \"Ft00XuFgd7V/l5IOzBu6IoMhWeI=\");\n\n_c = FlightsModal;\nexport default FlightsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlightsModal\");","map":{"version":3,"sources":["C:/Users/user/GitHub/SENG3011-Brickwalls/PHASE_2/Application_SourceCode/travel-restrictions-app/src/components/FlightsModal.js"],"names":["Modal","useEffect","useState","Flight","FlightsModal","show","setShow","destination","origin","depDate","retDate","destCity","split","origCity","flightsData","require","curr1","setCurr1","curr2","setCurr2","cities","setCities","monthNames","depart","getDate","getMonth","getFullYear","returnDate","count","checkCities","map","e","airline","arrDate","time","stops","price","reverse"],"mappings":"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","sourcesContent":["import '../styles/modal.css'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useEffect, useState} from 'react'\r\nimport Flight from './Flight.js'\r\n\r\nfunction FlightsModal({show, setShow, destination, origin, depDate, retDate}) {\r\n    const destCity = destination.split(\", \")\r\n    const origCity = origin.split(\", \")\r\n    destination = destCity[0]\r\n    origin = origCity[0]\r\n    const flightsData = require(\"../data/flightsdata.json\")\r\n    const [curr1, setCurr1] = useState(\"selected-left\")\r\n    const [curr2, setCurr2] = useState(\"unselected-right\")\r\n    const [cities, setCities] = useState([destination, origin])\r\n    useEffect(() => {\r\n        setCities([destination, origin])\r\n    }, [destination, origin])\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const depart = depDate.getDate() + \" \" + monthNames[depDate.getMonth()] + \" \" + depDate.getFullYear()\r\n    const returnDate = retDate.getDate() + \" \" + monthNames[retDate.getMonth()] + \" \" + retDate.getFullYear()\r\n    let count = 0\r\n    const checkCities = () => {\r\n        return (\r\n            <div className=\"flight-list\">\r\n                {flightsData.map(e => {\r\n                    if (e.destination === cities[0] && e.origin === cities[1]) {\r\n                        if (curr1 === \"selected-left\") {\r\n                            count += 1\r\n                            return (\r\n                                <Flight \r\n                                    airline={e.airline} \r\n                                    depDate={depart} \r\n                                    arrDate={e.arrDate} \r\n                                    time={e.time} \r\n                                    stops={e.stops} \r\n                                    origin={e.origin} \r\n                                    destination={e.destination} \r\n                                    price={e.price}\r\n                                    key={count}>\r\n                                </Flight>\r\n                            )\r\n                        }\r\n                        else {\r\n                            count += 1\r\n                            return (\r\n                                <Flight \r\n                                    airline={e.airline} \r\n                                    depDate={returnDate} \r\n                                    arrDate={e.arrDate} \r\n                                    time={e.time} \r\n                                    stops={e.stops} \r\n                                    origin={e.origin} \r\n                                    destination={e.destination} \r\n                                    price={e.price}\r\n                                    key={count}>\r\n                                </Flight>\r\n                            )\r\n                        }\r\n                    }\r\n                    return null\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (show) {\r\n        return (\r\n            <Modal show={show} onHide={() => setShow(false)} size=\"lg\">\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Flights from {origin} to {destination} \r\n                    </Modal.Title>\r\n                    <div className=\"selector\">\r\n                        <button className={curr1} onClick={() => {setCurr2(\"unselected-right\"); setCurr1(\"selected-left\"); setCities(cities.reverse())}}>\r\n                            {depart}\r\n                        </button>\r\n                        <button className={curr2} onClick={() => {setCurr2(\"selected-right\"); setCurr1(\"unselected-left\"); setCities(cities.reverse())}}>\r\n                            {returnDate}\r\n                        </button>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {checkCities()}\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nexport default FlightsModal"]},"metadata":{},"sourceType":"module"}